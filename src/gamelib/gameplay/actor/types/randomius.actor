static std::default_random_engine rng;
static std::uniform_real_distribution<float> fdist{0.0f, 1.0f};

return actor
{
	.entity =
	{
		actor_component<actor_component_id::skin>
		{{
			.data =
			{
				.skin_colour = tz::vec3{0.946f, 0.813f, 0.730f} * fdist(rng),
				.hair_style = [](){return static_cast<prefab::human_art::hair_style>(rng() % static_cast<int>(prefab::human_art::hair_style::_count));}(),
				.eye_type = prefab::human_art::eye_type::dots,
				.eye_colour = {fdist(rng), fdist(rng), fdist(rng)},
				.equipment =
				{
					.helm_type = [](){return static_cast<prefab::human_art::helm_type>(rng() % static_cast<int>(prefab::human_art::helm_type::_count));}(),
					.helm_colour = {fdist(rng), fdist(rng), fdist(rng)},
					.chest_type = [](){return static_cast<prefab::human_art::chest_type>(rng() % static_cast<int>(prefab::human_art::chest_type::_count));}(),
					.chest_colour = {fdist(rng), fdist(rng), fdist(rng)},
					.feet_type = [](){return static_cast<prefab::human_art::feet_type>(rng() % static_cast<int>(prefab::human_art::feet_type::_count));}(),
					.feet_colour = {fdist(rng), fdist(rng), fdist(rng)},
				}
			}
		}},
		actor_component<actor_component_id::motion>
		{{
			.speed = fdist(rng) * 2.0f + 0.5f
		}}
	},
	.name = "Randomius (Dev)"
};
