return spell
{
	.cast =
	{
		.colour = {1.0f, 1.0f, 0.4f},
		.cast_time_seconds = 2.5f
	},
	.function = [](actor& a, actor_system& sys)
	{
		if(a.entity.has_component<actor_component_id::damageable>())
		{
			actor* tar = sys.find(a.target);
			if(tar == nullptr)
			{
				tar = &a;
			}
			auto& damageable = tar->entity.get_component<actor_component_id::damageable>()->data();
			std::size_t heal_amt = damageable.max_health - damageable.health;
			heal_amt = std::min(heal_amt, static_cast<std::size_t>(50));
			damageable.health += heal_amt;
			tar->actions.add_component<action_id::emit_combat_text>
			({
				.type = combat_text_type::heal,
				.amount = heal_amt
			});
		}
	},
	.name = "Lesser Heal"
};
