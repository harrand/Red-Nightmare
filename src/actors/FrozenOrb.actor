return
{
	.type = ActorType::FrozenOrb,
	.flags =
	{
		Flag<FlagID::Light>
		{{
			.light =
			{
				.colour = {0.01f, 0.1f, 1.0f},
				.power = 0.015f
			}
		}},
		Flag<FlagID::Projectile>{},
		Flag<FlagID::CustomGarbageCollectPeriod>
		{{
			.delay_millis = 500ull
		}},
		Flag<FlagID::InvisibleWhileDead>{},
		Flag<FlagID::CustomScale>{{.scale = {0.65f, 0.65f}}},
		Flag<FlagID::HazardousIf>
		{{
			.predicate = [](const Actor& self, const Actor& actor)->bool
			{
				return self.is_enemy_of(actor);
			}
		}},
		Flag<FlagID::ActionOnOOL>
		{{
			.actions =
			{
				Action<ActionID::Die>{}
			}
		}},
		Flag<FlagID::Stealth>{},
		Flag<FlagID::SelfRecoil>{},
		Flag<FlagID::Unhittable>{},
		Flag<FlagID::ActionOnHit>
		{{
			.hittee_actions
			{
				Action<ActionID::ApplyBuff>
				{{
					.buff = BuffID::Chill
				}},
			},
		}},
		Flag<FlagID::ActionOnRepeat>
		{{
			.period = 250.0f,
			.current_time = 250.0f,
			.predicate = [](const Actor& a){return !a.dead();},
			.actions =
			{
				Action<ActionID::SpawnActor>
				{{
					.actor = ActorType::Frostbolt,
					.inherit_faction = true,
					.actions =
					{
						Action<ActionID::LaunchRandomDirection>
						{{
							.speed_multiplier = 8.0f
						}},
						Action<ActionID::ApplyFlag>
						{{
							.flags =
							{
								Flag<FlagID::CustomScale>
								{{
									.scale = {0.1f, 0.1f}
								}}
							}
						}}
					}
				}}
			}
		}}
	},
	.faction = Faction::PlayerEnemy,
	.base_stats =
	{
		.movement_speed = 0.0005f,
		.damage = default_base_damage * 60.0f * 5.0f,
		.max_health = 0.1f,
		.current_health = 0.1f
	},
	.skin = ActorSkin::Invisible,
	.animation = game::play_animation(AnimationID::PlayerAkhara_DefaultFireball_Idle),
	.name = "Frozen Orb"
};
