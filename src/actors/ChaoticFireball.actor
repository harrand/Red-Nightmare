return
{
	.type = ActorType::ChaoticFireball,
	.flags =
	{
		Flag<FlagID::Light>
		{{
			.lights =
			{
				{
					.light =
					{
						.colour = {1.0f, 0.1f, 0.02f},
						.power = 0.005f
					}
				}
			}
		}},
		Flag<FlagID::Projectile>{},
		Flag<FlagID::CustomGarbageCollectPeriod>
		{{
			.delay_millis = 500ull
		}},
		Flag<FlagID::InvisibleWhileDead>{},
		Flag<FlagID::CustomScale>{{.scale = {0.65f, 0.65f}}},
		Flag<FlagID::HazardousIf>
		{{
			.predicate = [](const Actor& self, const Actor& actor)->bool
			{
				return self.is_enemy_of(actor);
			}
		}},
		Flag<FlagID::ActionOnOOL>
		{{
			.actions =
			{
				Action<ActionID::Die>{}
			}
		}},
		Flag<FlagID::Stealth>{},
		Flag<FlagID::SelfRecoil>{},
		Flag<FlagID::Unhittable>{},
		Flag<FlagID::ActionOnActorTouch>
		{{
			.predicate = [](const Actor& self, const Actor& actor)
			{
				return actor.flags.has<FlagID::Projectile>() && self.is_enemy_of(actor);
			},
			.actions =
			{
				Action<ActionID::Die>{}
			},
			.touchee_actions =
			{
				Action<ActionID::Die>{}
			}
		}},
		Flag<FlagID::ActionOnDeath>
		{{
			.actions =
			{
				Action<ActionID::SpawnActor>
				{{
					.actor = ActorType::FireSmoke,
				}},
			}
		}}
	},
	.faction = Faction::PlayerEnemy,
	.base_stats =
	{
		.movement_speed = 0.001f,
		.damage = default_base_damage * 60.0f * 5.0f,
		.max_health = 0.0001f,
		.current_health = 0.0001f
	},
	.skin = ActorSkin::Invisible,
	.animation = game::play_animation(AnimationID::PlayerAkhara_DefaultFireball_Idle),
	.name = "Fireball"
};
