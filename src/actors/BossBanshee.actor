return
{
	.type = ActorType::BossBanshee,
	.flags =
	{
		Flag<FlagID::StatTracked>{},
		Flag<FlagID::CustomScale>
		{{
			.scale = {2.0f, 2.0f}
		}},
		Flag<FlagID::Light>
		{{
			.light =
			{
				.colour = {-1.0f, -1.0f, -0.01f},
				.power = 0.01f
			},
			.power_variance = 0.01f,
			.variance_rate = 0.4f,
			.min_variance_pct = 0.05f,
			.power_scale_with_health_pct = true
		}},
		Flag<FlagID::Collide>
		{{
			.collision_filter =
			{
				ActorType::GhostZombie,
				ActorType::GhostBanshee_Skittish
			}
		}},
		Flag<FlagID::AggressiveIf>
		{{
			.predicate = [](const Actor& self, const Actor& victim){return self.is_enemy_of(victim) && !victim.dead();}
		}},
		Flag<FlagID::HazardousIf>
		{{
			.predicate = [](const Actor& self, const Actor& victim){return self.is_enemy_of(victim);}
		}},
		Flag<FlagID::ActionOnHit>
		{{
			.hittee_actions =
			{
				Action<ActionID::ApplyBuff>
				{{
					.buff = BuffID::Chill
				}}
			}
		}},
		Flag<FlagID::ActionOnDeath>
		{{
			.actions =
			{
				Action<ActionID::RespawnAs>
				{{
					.actor = ActorType::GhostBanshee
				}},
				Action<ActionID::ApplyBuff>
				{{
					.buff = BuffID::Sprint
				}}
			}
		}},
		Flag<FlagID::ActionOnRepeat>
		{{
			.period = 1000.0f,
			.current_time = 10000.0f,
			.actions =
			{
				Action<ActionID::Cast>
				{{
					.cast_time_millis = 500.0f,
					.actions =
					{
						Action<ActionID::SpawnActor>
						{{
							.actor = ActorType::FrozenOrb,
							.inherit_faction = true,
							.actions =
							{
								Action<ActionID::LaunchRandomDirection>
								{{
									.speed_multiplier = 4.0f
								}}
							}
						}}
					},
					.cast_while_moving = true
				}},
			}
		}}
	},
	.faction = Faction::PlayerEnemy,
	.base_stats =
	{
		.movement_speed = 0.0f,
		.max_health = 50.0f,
		.current_health = 50.0f
	},
	.skin = ActorSkin::GhostBanshee,
	.animation = game::play_animation(AnimationID::GhostBanshee_Idle),
	.palette_colour = {0u, 12u, 255u},
	.name = "Banshee (Boss)",
	.density = 0.1f
};
