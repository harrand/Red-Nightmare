shader(type = fragment);

input(id = 0, flat) uint in_texture_id;
input(id = 1) vec2 in_texcoord;
input(id = 2) vec3 colour_offset;
output(id = 0) vec4 frag_colour;

import <math>

resource(id = 1) const texture images[];

void main()
{
	frag_colour = texture(images[in_texture_id], in_texcoord);
	frag_colour.r = tz::math::min(frag_colour.r, colour_offset.r * 2.0f);
	frag_colour.g = tz::math::min(frag_colour.g, colour_offset.g * 2.0f);
	frag_colour.b = tz::math::min(frag_colour.b, colour_offset.b * 2.0f);
	frag_colour.xyz += (colour_offset - vec3(0.5f));
	if(frag_colour.a < 0.9f)
	{
		discard;
	}
}
